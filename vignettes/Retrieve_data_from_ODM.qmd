---
title: "Retrieve information from ODM"
author: "Sehyun Oh"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
    html:
        fontsize: 14pxs
        toc: true
        top-depth: 3
---

# Setup
## Load library
```{r include=FALSE, results="hide", message=FALSE, warning=FALSE}
library(curatedMetagenomicDataCuration)
```

## Load ODM API token
```{r}
host <- "https://odm.drylab.tech" # ODM
token <- readLines("token") # save the token in the vignette directory
```

# Metadata processing
## Get all the studies
These are the studies you have access to and their study-level metadata.
```{r}
studies <- odm_get_studies(token)
studies
```

## Get sample metadata per study

For `odm_get_samples()`, 
  + `study_id` (one of the arguments) is `genestack_accession`, which starts with `GSF`.\
  + It returns Genestack-specific ID columns (`genestack:accession`, `groupId`), which 
  need to be removed for cMD.

```{r}
dat <- odm_get_samples(token = token, study_id = "GSF000293")
dat <- odm_get_samples(token = token, study_id = "GSF004195")
```

```{r}
head(dat)
```

```{bash echo=FALSE, eval=FALSE}
## How to delete a study
odm-delete-study --accession GSF004080 -H https://odm.drylab.tech
```

## Check metadata curation status
`valid` means all the required fields are entered and all the values are 
validated against the schema.
```{r}
## An example of 'valid' study, `AsnicarF_2017`
odm_get_status(host = host, 
               token = token,
               study_id = "GSF004195") 

## An example of 'invalid' study, `PiccinnoG_2024`
odm_get_status(host = host, 
               token = token,
               study_id = "GSF000293")
```

# Processing 
## Nextflow-processed datasets
Swagger for NF telemetry: https://nf-telemetry-819875667022.us-central1.run.app/docs

```{r}
nf_res <- nf_get_completed_run(100)
head(nf_res)
```

```{r echo=FALSE, eval=FALSE}
## Check the processed data among cMD3 studies
catalog <- readr::read_csv("biosamples_catalog.csv")
processed <- dplyr::left_join(nf_res, catalog, by = "sample_id")
cmd <- OmicsMLRepoR::getMetadata("cMD")
procssed_study_names <- cmd %>%
  dplyr::filter(ncbi_accession %in% processed$sra_study) %>%
  dplyr::pull(study_name) %>%
  unique
```
